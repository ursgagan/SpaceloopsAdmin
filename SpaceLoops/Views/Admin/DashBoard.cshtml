@{
    Layout = "_layoutAdmin";
}

<section class="section">
    <input type="hidden" id="hdnTempData" value="@TempData["SuccessMessage"]" />
    <h1 class="section-header">
        <div>Dashboard</div>
    </h1>
    <div class="row">
        <div class="col-lg-3 col-md-6 col-12">
            <div class="card card-sm-3">
                <div class="card-icon bg-primary">
                    <i class="ion ion-person"></i>
                </div>
                <div class="card-wrap">
                    <div class="card-header">
                        <h4>Total Countries </h4>
                    </div>
                    <div id="CountryCount" class="card-body">
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-12">
            <div class="card card-sm-3">
                <div class="card-icon bg-danger">
                    <i class="ion ion-ios-paper-outline"></i>
                </div>
                <div class="card-wrap">
                    <div class="card-header">
                        <h4>Total States</h4>
                    </div>
                    <div id="StateCount" class="card-body">
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-12">
            <div class="card card-sm-3">
                <div class="card-icon bg-warning">
                    <i class="ion ion-paper-airplane"></i>
                </div>
                <div class="card-wrap">
                    <div class="card-header">
                        <h4>Total City</h4>
                    </div>
                    <div id="CityCount" class="card-body">
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-12">
            <div class="card card-sm-3">
                <div class="card-icon bg-success">
                    <i class="ion ion-record"></i>
                </div>
                <div class="card-wrap">
                    <div class="card-header">
                        <h4>Total Users</h4>
                    </div>
                    <div id="UserCount" class="card-body">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-12 col-sm-12">
            <div class="card">
                <div class="card-header">
                    <div class="float-right">
                        <div class="btn-group">
                            <a href="#" class="btn active">Week</a>
                            <a href="#" class="btn">Month</a>
                            <a href="#" class="btn">Year</a>
                        </div>
                    </div>
                    <h4>Statistics</h4>
                </div>
                <div class="card-body">
                    <canvas id="myChart" height="158"></canvas>
                   
                </div>
            </div>
        </div>
   </div>

</section>

<script src="~/admintemplate/js/jquery-3.6.4.min.js"></script>
<script src="~/admintemplate/modules/chart.min.js"></script>

<script>

    $(document).ready(function () {

        $.ajax({
            url: '/Address/GetAllCount', // Replace this with your actual endpoint to retrieve user profile data
            type: 'GET',
            success: function (response) {

                if (response) {


                    var countryCount = $('#CountryCount').text(response.countryCount);

                    var stateCount = $('#StateCount').text(response.stateCount);
                    var cityCount = $('#CityCount').text(response.cityCount);
                    var userCount = $('#UserCount').text(response.userCount);

                    updateChart(response.countryCount, response.stateCount, response.cityCount, response.userCount)
                }
            },
            // error: function (xhr, status, error) {
            //     console.error('Error retrieving user profile data:', error);
            // }
        });
    });

    function updateChart(countryCount, stateCount, cityCount, userCount) {

        var ctx = document.getElementById("myChart").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ["Countries", "States", "City", "Users"],
                datasets: [{
                    label: 'Country Count',
                    data: [countryCount],
                    borderWidth: 2,
                    backgroundColor: 'rgb(87, 75, 144)',
                    borderColor: 'rgb(87, 75, 144)',
                    pointBackgroundColor: '#ffffff',
                    pointRadius: 4
                }, {
                    label: 'State Count',
                    data: [stateCount],
                    borderWidth: 2,
                    backgroundColor: 'rgb(255, 99, 132)',
                    borderColor: 'rgb(255, 99, 132)',
                    pointBackgroundColor: '#ffffff',
                    pointRadius: 4
                }, {
                    label: 'City Count',
                    data: [cityCount],
                    borderWidth: 2,
                    backgroundColor: 'rgb(54, 162, 235)',
                    borderColor: 'rgb(54, 162, 235)',
                    pointBackgroundColor: '#ffffff',
                    pointRadius: 4
                }, {
                    label: 'User Count',
                    data: [userCount],
                    borderWidth: 2,
                    backgroundColor: 'rgb(255, 206, 86)',
                    borderColor: 'rgb(255, 206, 86)',
                    pointBackgroundColor: '#ffffff',
                    pointRadius: 4
                }]
            },
            options: {
                legend: {
                    display: true,
                    position: 'bottom'
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            stepSize: 5
                        }
                    }],
                    xAxes: [{
                        gridLines: {
                            display: false
                        }
                    }]
                },
            }
        });
    }
</script>